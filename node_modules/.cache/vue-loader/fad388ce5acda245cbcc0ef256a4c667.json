{"remainingRequest":"D:\\GienProject\\poc\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GienProject\\poc\\Pncui-Indicator\\src\\views\\indicators\\batch\\SqlEditor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GienProject\\poc\\Pncui-Indicator\\src\\views\\indicators\\batch\\SqlEditor\\index.vue","mtime":1646502697379},{"path":"D:\\GienProject\\poc\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GienProject\\poc\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\GienProject\\poc\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GienProject\\poc\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\r\nimport \"codemirror/theme/ambiance.css\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nlet CodeMirror = require(\"codemirror/lib/codemirror\");\r\nrequire(\"codemirror/addon/edit/matchbrackets\");\r\nrequire(\"codemirror/addon/selection/active-line\");\r\nrequire(\"codemirror/mode/sql/sql\");\r\nrequire(\"codemirror/mode/shell/shell\");\r\nrequire(\"codemirror/addon/hint/show-hint\");\r\nrequire(\"codemirror/addon/hint/sql-hint\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      editor: null,\r\n    };\r\n  },\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    sqlStyle: {\r\n      type: String,\r\n      default: \"default\",\r\n    },\r\n    readOnly: {\r\n      type: [Boolean, String],\r\n    },\r\n    lineNumbers: {\r\n      type: [Boolean, String],\r\n      default: () => true,\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"auto\",\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"300px\",\r\n    },\r\n    codeType: {\r\n      type: String,\r\n      // 'text/x-sh'\r\n      // default: \"text/x-sh\",\r\n      default: \"text/x-mariadb\",\r\n    },\r\n  },\r\n  watch: {\r\n    newVal(newV, oldV) {\r\n      if (this.editor) {\r\n        this.$emit(\"changeTextarea\", this.editor.getValue());\r\n      }\r\n    },\r\n    codeType(newV) {\r\n      this.editor && this.editor.setOption(\"mode\", newV);\r\n    },\r\n  },\r\n  computed: {\r\n    newVal() {\r\n      if (this.editor) {\r\n        return this.editor.getValue();\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // let theme = 'ambiance'//设置主题，不设置的会使用默认主题\r\n    this.editor = CodeMirror.fromTextArea(this.$refs.mycode, {\r\n      value: this.value,\r\n      mode: this.codeType, // 选择对应代码编辑器的语言，我这边选的是数据库，根据个人情况自行设置即可\r\n      indentWithTabs: true,\r\n      smartIndent: true,\r\n      lineNumbers: this.lineNumbers,\r\n      matchBrackets: true,\r\n      cursorHeight: 1,\r\n      lineWrapping: true,\r\n      readOnly: this.readOnly,\r\n      // theme: theme,\r\n      // autofocus: true,\r\n      extraKeys: { Ctrl: \"autocomplete\" }, // 自定义快捷键\r\n      hintOptions: {\r\n        // 自定义提示选项\r\n        // 当匹配只有一项的时候是否自动补全\r\n        completeSingle: false,\r\n        // tables: {\r\n        //     users: ['name', 'score', 'birthDate'],\r\n        //     countries: ['name', 'population', 'size']\r\n        // }\r\n      },\r\n    });\r\n    // 代码自动提示功能，记住使用cursorActivity事件不要使用change事件，这是一个坑，那样页面直接会卡死\r\n    this.editor.on(\"inputRead\", () => {\r\n      this.editor.showHint();\r\n    });\r\n    this.setSize();\r\n  },\r\n  methods: {\r\n    setSize(nowHeight) {\r\n      this.editor.setSize(this.width, nowHeight || this.height);\r\n    },\r\n    setVal(value) {\r\n      if (this.editor) {\r\n        // if (this.value === \"\") {\r\n        //   this.editor.setValue(\"\");\r\n        // } else {\r\n        //   this.editor.setValue(this.value);\r\n        // }\r\n        this.editor.setValue(value);\r\n      }\r\n    },\r\n  },\r\n};\r\n",null]}