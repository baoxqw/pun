{"remainingRequest":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\src\\views\\indicators\\inddeptapply\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\src\\views\\indicators\\inddeptapply\\index.vue","mtime":1645075665012},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndDeptApplyInfo from '@/api/indDeptApply/indDeptApplyInfo'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport { getDepts } from '@/utils/system'\nimport moment from \"moment\";\nimport crudIndCategory from \"@/api/indicators/indCategory\";\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '部门指标使用情况', url: crudIndDeptApplyInfo.url, sort: 'id,desc', crudMethod: { ...crudIndDeptApplyInfo.crud }})\nconst defaultForm = { id: null, orgId: null, orgName: null, ieCode: null, ieName: null, ieKindOneCode: null, ieKindTwoCode: null, ieTypeCode: null, bizDeptId: null, bizDeptName: null, ieRefCnt: null, ieQryCnt: null, repDate: null, crtDate: null, updDate: null,repDateInterval:null }\nexport default {\n  name: 'IndDeptApplyInfo',\n  components: { Treeselect,pagination, crudOperation, rrOperation, udOperation },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['BUSSINESS_DEPT','IE_PROP'],\n  data() {\n    return {\n      depts: [],\n      qryIndFirstType: [],\n      permission: {\n        add: ['admin', 'indDeptApplyInfo:add'],\n        edit: ['admin', 'indDeptApplyInfo:edit'],\n        del: ['admin', 'indDeptApplyInfo:del']\n      },\n      rules: {\n        orgId: [\n          { required: true, message: '机构ID不能为空', trigger: 'blur' }\n        ],\n        orgName: [\n          { required: true, message: '机构名称不能为空', trigger: 'blur' }\n        ],\n        ieCode: [\n          { required: true, message: '指标编码不能为空', trigger: 'blur' }\n        ],\n        ieName: [\n          { required: true, message: '指标名称不能为空', trigger: 'blur' }\n        ],\n        ieKindOneCode: [\n          { required: true, message: '指标分类一级不能为空', trigger: 'blur' }\n        ],\n        ieKindTwoCode: [\n          { required: true, message: '指标分类二级不能为空', trigger: 'blur' }\n        ],\n        ieTypeCode: [\n          { required: true, message: '指标类型不能为空', trigger: 'blur' }\n        ],\n        bizDeptId: [\n          { required: true, message: '业务属主部门ID不能为空', trigger: 'blur' }\n        ],\n        bizDeptName: [\n          { required: true, message: '业务属主部门名称不能为空', trigger: 'blur' }\n        ],\n        repDate: [\n          { required: true, message: '数据日期不能为空', trigger: 'blur' }\n        ]\n      },\n      queryTypeOptions: [\n        { key: 'orgId', display_name: '机构ID' },\n        { key: 'ieCode', display_name: '指标编码' },\n        { key: 'ieName', display_name: '指标名称' },\n        { key: 'ieKindOneCode', display_name: '指标分类一级' },\n        { key: 'ieTypeCode', display_name: '指标类型' },\n        { key: 'bizDeptId', display_name: '业务属主部门ID' },\n        { key: 'bizDeptName', display_name: '业务属主部门名称' }\n      ],\n      pickerMinDate: \"\",//第一次选中的时间\n      pickerOptions: {\n        onPick: obj => {\n          //this.pickerMinDate = new Date(obj.minDate).getTime();\n          /*debugger\n          const day = 366 * 24 * 3600 * 1000;\n          let minDate = obj.minDate;\n          let maxDate = obj.maxDate;\n          if(minDate != null && maxDate != null) {\n            minDate = new Date(obj.minDate).getTime();\n            maxDate = new Date(obj.maxDate).getTime();\n            if(maxDate - minDate > day) {\n              this.pickerMaxDate = null;\n            }\n          }*/\n\n        },\n        disabledDate: time => {\n          if (this.pickerMinDate) {\n            const day1 = 366 * 24 * 3600 * 1000;\n            let maxTime = this.pickerMinDate + day1;\n            let minTime = this.pickerMinDate - day1;\n            return time.getTime() > maxTime || time.getTime() < minTime;\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    this.getDepts();\n  },\n  created() {\n    //defaultCrud.query.repDateInterval = this.timeDefault\n    this.initIndFirstType();\n    this.resetQuery()\n  },\n  computed: {\n    // 默认时间\n    timeDefault () {\n      var defalutStartTime = moment().subtract(1,\"year\").format('YYYY-MM-DD')\n      var defalutEndTime = moment().format('YYYY-MM-DD')\n      return [defalutStartTime, defalutEndTime]\n    }\n  },\n  methods: {\n    resetQuery(){\n      this.crud.resetQuery(false);\n      this.crud.refresh()\n    },\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      const query = this.query\n      if (query.type && query.value) {\n        this.crud.params[query.type] = query.value\n      }\n      return true\n    },\n    getDepts() {\n      getDepts({ enabled: true }).then(res => {\n        this.depts = res.content\n      })\n    },\n    exportData(query) {\n      console.log(query)\n\n    },\n    initIndFirstType() {\n      crudIndCategory.getCategoryList(0).then(res => {\n        const data = res.data;\n        if(res.code == 0) {\n          for(let i=0; i<data.length; i++) {\n            this.qryIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n            //this.formIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n          }\n        }\n      })\n    }\n  }\n}\n",null]}