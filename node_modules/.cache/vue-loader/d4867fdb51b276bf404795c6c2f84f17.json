{"remainingRequest":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\src\\views\\indicators\\resultSubscribe\\subscribeindex.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\src\\views\\indicators\\resultSubscribe\\subscribeindex.vue","mtime":1644564111046},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\苏州指标\\苏州指标indicator\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport crudIndResultSubscribe,{getResultDepts} from '@/api/indicators/indResultSubscribe'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\n// import udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport category from '../category/category'\n//import { getDepts } from '@/utils/system'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport moment from \"moment\";\nimport {saveReadRec} from \"@/api/indicators/indIndicatorResult\";\nimport crudIndCategory from \"@/api/indicators/indCategory\";\n// crud交由presenter持有\nconst defaultCrud = CRUD({\n  title: '指标计算结果表',\n  url: crudIndResultSubscribe.url,\n  sort: 'id,desc',\n  initQry: false,\n  crudMethod: { ...crudIndResultSubscribe.crud }\n})\nconst defaultForm = {\n  id: null,\n  orgId: null,\n  ieId: null,\n  ieCode: null,\n  ieName: null,\n  ieValue: null,\n  status: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null,\n  frequency: null,\n  periodDateInterval:null,\n  categoryType: '0'\n}\nexport default {\n  name: 'SubscribeIndex',\n  components: { Treeselect,pagination, crudOperation, rrOperation, category },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IND_FIRST_TYPE','RETENTION', 'IE_TYPE', 'IE_STATUS','IND_CURRENCY','YN','IE_FREQUENCY'],\n  data() {\n    return {\n      depts: [],\n      form: {},\n      qryIndFirstType: [],\n      qryIndSecondType: [],\n      formIndFirstType: [],\n      formIndSecondType: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      table: {\n        columns: {\n          id: 'hidden',\n          ieId: 'hidden',\n          updUserCode: 'hidden',\n          updDate: 'hidden'\n        }\n      },\n      permission: {\n        add: [''],\n        edit: [''],\n        del: ['']\n      },\n      showDialog: false,\n      pickerMinDate: \"\",//第一次选中的时间\n      pickerOptions: {\n        onPick: obj => {\n          this.pickerMinDate = new Date(obj.minDate).getTime();\n        },\n        disabledDate: time => {\n          if (this.pickerMinDate) {\n            const day1 = 366 * 24 * 3600 * 1000;\n            let maxTime = this.pickerMinDate + day1;\n            let minTime = this.pickerMinDate - day1;\n            return time.getTime() > maxTime || time.getTime() < minTime;\n          }\n        }\n      }\n    }\n  },\n  created() {\n    //defaultCrud.query.periodDateInterval = this.timeDefault\n    this.initIndFirstType();\n    this.resetQuery();\n  },\n  mounted() {\n    defaultCrud.initQry = false\n    this.getDepts();\n    defaultCrud.refresh()\n  },\n  computed: {\n    // 默认时间\n    /*timeDefault () {\n      var defalutStartTime = moment().subtract(1,\"year\").format('YYYY-MM-DD')\n      var defalutEndTime = moment().format('YYYY-MM-DD')\n      return [defalutStartTime, defalutEndTime]\n    }*/\n  },\n  methods: {\n    resetQuery(){\n      this.crud.resetQuery(false);\n      this.crud.refresh()\n    },\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      this.crud.query.flag = 'subscribe'\n      if(defaultCrud.initQry){\n        return true\n      }else{\n        defaultCrud.loading = false\n        defaultCrud.initQry = true\n        return false\n      }\n    },\n    viewHandle(row) {\n      this.form = row\n      this.showDialog = true\n      this.saveReadRec(row.id)\n    },\n    getDepts() {\n      /*getDepts({ enabled: true }).then(res => {\n        this.depts = res.content\n      })*/\n      getResultDepts().then(res => {\n        this.depts = res.content\n      })\n    },\n    handleCategoryClick(data) {\n      this.crud.form.categoryId = data.id\n      this.crud.query.categoryIds = data.childrenIds\n      this.crud.query.categoryType = data.categoryType\n      this.form.categoryType = data.categoryType\n      this.form.categoryId = data.id\n      this.crud.form.indFirstType = data.id;\n      this.crud.refresh()\n    },\n    saveReadRec(id) {\n      console.log(\"hhhhhhhhhhhhhhhh: \" + id)\n      saveReadRec(id).then(res => {\n        console.log(\"saveReadRec res===>,\" + res)\n      })\n    },\n    cellStyle(data) {\n      if(data.row.readed === 0) {\n        return 'font-weight: 1000;color:#1742a5;'\n      } else {\n        return ''\n      }\n    },\n    refreshList() {\n      this.crud.refresh()\n    },\n    initIndFirstType() {\n      crudIndCategory.getCategoryList(0).then(res => {\n        const data = res.data;\n        if(res.code == 0) {\n          for(let i=0; i<data.length; i++) {\n            this.qryIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n            this.formIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n          }\n        }\n      })\n    },\n    initIndSecondType(indFirstType,type) {\n      if(type == \"query\") {\n        this.qryIndSecondType = [];\n      }else {\n        this.formIndSecondType = [];\n      }\n      //let indFirstType = this.query.indFirstType;\n      if(indFirstType == null) {\n        return;\n      }\n      crudIndCategory.getCategoryList(indFirstType).then(res => {\n        const data = res.data;\n        if(res.code == 0) {\n          for(let i=0; i<data.length; i++) {\n            if(type == \"query\"){\n              this.qryIndSecondType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n            } else {\n              this.formIndSecondType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\n            }\n\n          }\n        }\n      })\n    },\n    toResultList(row) {\n      this.$router.push({path: '/indicator/result/index',\n        query: {deptId: row.deptNo,ieName: row.ieName,currency: row.currency,frequency: row.frequency}})\n    }\n  }\n}\n",null]}